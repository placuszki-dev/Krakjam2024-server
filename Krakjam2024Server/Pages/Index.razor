@page "/"
@using Placuszki.Krakjam2024.Server
@inject GameplayService GameplayService
@inject SessionService SessionService
@inject IJSRuntime JSRuntime

<div id="game">
    <button @onclick="InitGame">Start game</button>
</div>


@code {
    private float _x = 0f;
    private float _y = 5;

    public Index()
    {
    }

    private void InitGame()
    {
        // JS.InvokeAsync<string>("initGame");
    }

    private void ButtonPressed()
    {
        SendDataPacketToClients();
    }

    private void ButtonReleased()
    {
    }

    private void SendDataPacketToClients()
    {
        var dataPacket = new DataPacket
        {
            PlayerId = SessionService.getPlayerId(),
            PhoneColor = SessionService.getPhoneColor(),
            X = _x,
            Y = _y,
        };
        GameplayService.SendUpdateToClients(dataPacket);
    }

    // To wywolaj Szymon
    private void SendDataPacketToClients(DataPacket dataPacket)
    {
        GameplayService.SendUpdateToClients(dataPacket);
    }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        if (firstRender)
        {
            // See warning about memory above in the article
            var dotNetReference = DotNetObjectReference.Create(this);
            JSRuntime.InvokeVoidAsync("window.initGame", dotNetReference);
        }
    }

    [JSInvokable]
    public string getPhoneColor()
    {
        return SessionService.getPhoneColor();
    }

    [JSInvokable]
    public void setPhoneColor(string color)
    {
	SessionService.setPhoneColor(color);
    }

    [JSInvokable]
    public string getPlayerId()
    {
        return SessionService.getPlayerId();
    }

    [JSInvokable]
    public void setPlayerId(string playerid)
    {
	SessionService.setPlayerId(playerid);
    }

    [JSInvokable]
    public void sendXY(float x, float y)
    {
        float sendX = x;
        float sendY = -y;
        
        var dataPacket = new DataPacket
        {
            PlayerId = SessionService.getPlayerId(),
            PhoneColor = SessionService.getPhoneColor(),
            X = sendX,
            Y = sendY,
        };
        Console.WriteLine($"x={sendX}, y={sendY}");
        GameplayService.SendUpdateToClients(dataPacket);
    }
}
